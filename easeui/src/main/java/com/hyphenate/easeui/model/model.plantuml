@startuml

title __MODEL's Class Diagram__\n

  namespace com.hyphenate.easeui {
    namespace model {
      class com.hyphenate.easeui.model.EaseDefaultEmojiconDatas {
          {static} - DATA : EaseEmojicon[]
          {static} - emojis : String[]
          {static} - icons : int[]
          {static} + getData()
          {static} - createData()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace model {
      class com.hyphenate.easeui.model.EaseEvent {
          + event : String
          + message : String
          + refresh : boolean
          + EaseEvent()
          + EaseEvent()
          + EaseEvent()
          {static} + create()
          {static} + create()
          {static} + create()
          + isAccountChange()
          + isChatRoomLeave()
          + isContactChange()
          + isGroupChange()
          + isGroupLeave()
          + isMessageChange()
          + isNotifyChange()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace model {
      enum TYPE {
        ACCOUNT
        CHAT_ROOM
        CHAT_ROOM_LEAVE
        CONTACT
        GROUP
        GROUP_LEAVE
        MESSAGE
        NOTIFY
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace model {
      class com.hyphenate.easeui.model.EaseNotifier {
          {static} # CHANNEL_ID : String
          {static} # NOTIFY_ID : int
          {static} # VIBRATION_PATTERN : long[]
          # appContext : Context
          # audioManager : AudioManager
          # fromUsers : HashSet<String>
          # lastNotifyTime : long
          # msg : String
          # notificationManager : NotificationManager
          # notificationNum : int
          # packageName : String
          # ringtone : Ringtone
          # vibrator : Vibrator
          {static} - TAG : String
          + EaseNotifier()
          + notify()
          + notify()
          + notify()
          + notify()
          + reset()
          + setNotificationInfoProvider()
          + vibrateAndPlayTone()
          # handleMessage()
          ~ cancelNotification()
          ~ resetNotificationCount()
          - generateBaseBuilder()
          - generateBaseFullIntentBuilder()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace model {
      interface com.hyphenate.easeui.model.EaseNotifier.EaseNotificationInfoProvider {
          {abstract} + getDisplayedText()
          {abstract} + getLatestText()
          {abstract} + getLaunchIntent()
          {abstract} + getSmallIcon()
          {abstract} + getTitle()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace model {
      class com.hyphenate.easeui.model.VideoEntity {
          + ID : int
          + duration : int
          + filePath : String
          + lastModified : long
          + size : int
          + title : String
          + uri : Uri
      }
    }
  }
  

  com.hyphenate.easeui.model.EaseEvent .up.|> Serializable
  com.hyphenate.easeui.model.EaseEvent o-- com.hyphenate.easeui.model.EaseEvent.TYPE : type
  com.hyphenate.easeui.model.EaseEvent +-down- com.hyphenate.easeui.model.EaseEvent.TYPE
  com.hyphenate.easeui.model.EaseNotifier o-- com.hyphenate.easeui.model.EaseNotifier.EaseNotificationInfoProvider : notificationInfoProvider
  com.hyphenate.easeui.model.EaseNotifier +-down- com.hyphenate.easeui.model.EaseNotifier.EaseNotificationInfoProvider


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
