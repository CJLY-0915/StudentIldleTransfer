@startuml

title __INTERFACES's Class Diagram__\n

  namespace com.hyphenate.easeui {
    namespace interfaces {
      abstract class com.hyphenate.easeui.interfaces.EaseChatRoomListener {
          + onAdminAdded()
          + onAdminRemoved()
          + onAllMemberMuteStateChanged()
          + onAnnouncementChanged()
          {abstract} + onChatRoomDestroyed()
          {abstract} + onMemberExited()
          {abstract} + onMemberJoined()
          + onMuteListAdded()
          + onMuteListRemoved()
          + onOwnerChanged()
          {abstract} + onRemovedFromChatRoom()
          + onWhiteListAdded()
          + onWhiteListRemoved()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      abstract class com.hyphenate.easeui.interfaces.EaseGroupListener {
          + onAdminAdded()
          + onAdminRemoved()
          + onAllMemberMuteStateChanged()
          + onAnnouncementChanged()
          + onAutoAcceptInvitationFromGroup()
          {abstract} + onGroupDestroyed()
          + onInvitationAccepted()
          + onInvitationDeclined()
          + onInvitationReceived()
          + onMemberExited()
          + onMemberJoined()
          + onMuteListAdded()
          + onMuteListRemoved()
          + onOwnerChanged()
          + onRequestToJoinAccepted()
          + onRequestToJoinDeclined()
          + onRequestToJoinReceived()
          + onSharedFileAdded()
          + onSharedFileDeleted()
          {abstract} + onUserRemoved()
          + onWhiteListAdded()
          + onWhiteListRemoved()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      abstract class com.hyphenate.easeui.interfaces.EaseMessageCallback {
          + onError()
          + onProgress()
          + onSuccess()
          {abstract} + onSuccess()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.IChatAdapterProvider {
          {abstract} + provideMessageAdaper()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.IViewHolderProvider {
          {abstract} + provideViewHolder()
          {abstract} + provideViewType()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.MessageListItemClickListener {
          {abstract} + onBubbleClick()
          {abstract} + onBubbleLongClick()
          {abstract} + onMessageCreate()
          {abstract} + onMessageError()
          {abstract} + onMessageInProgress()
          {abstract} + onMessageSuccess()
          {abstract} + onResendClick()
          {abstract} + onUserAvatarClick()
          {abstract} + onUserAvatarLongClick()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.OnCallBack {
          {abstract} + onError()
          {abstract} + onSuccess()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      abstract class com.hyphenate.easeui.interfaces.OnEaseCallBack {
          + onError()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.OnItemClickListener {
          {abstract} + onItemClick()
      }
    }
  }
  

  namespace com.hyphenate.easeui {
    namespace interfaces {
      interface com.hyphenate.easeui.interfaces.OnItemLongClickListener {
          {abstract} + onItemLongClick()
      }
    }
  }
  

  com.hyphenate.easeui.interfaces.EaseChatRoomListener .up.|> EMChatRoomChangeListener
  com.hyphenate.easeui.interfaces.EaseGroupListener .up.|> EMGroupChangeListener
  com.hyphenate.easeui.interfaces.EaseMessageCallback .up.|> EMCallBack
  com.hyphenate.easeui.interfaces.OnEaseCallBack .up.|> OnCallBack


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
